#pragma config(Hubs,  S1, HTMotor,  HTMotor,  none,     none)
#pragma config(Sensor, S2,     LIGHT,          sensorLightActive)
#pragma config(Motor,  mtr_S1_C1_1,     motor1,        tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C1_2,     motor2,        tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C2_1,     motor3,        tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C2_2,     motor4,        tmotorTetrix, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*
INCLUDES
*/
#include "JoystickDriver.c"

/*
VARS
*/
int startingValue = 0;
int v = 0;
int tapeValue = 0;


/*
FUNCTION DECLARATION
*/
bool doISeeTape();
void findTape();

/*
FUNCTIONS
*/
void findTape() {
	startingValue = SensorValue[LIGHT];
	motor[motor1] = -30;
	motor[motor4] = -30;

	motor[motor2] = 30;
	motor[motor3] = 30;

	while (!doISeeTape());

	motor[motor1] = 0;
	motor[motor2] = 0;
	motor[motor3] = 0;
	motor[motor4] = 0;
	PlaySound(soundBeepBeep);
	tapeValue = v;
}

bool doISeeTape() {
	v = SensorValue[LIGHT];
	return abs(v - startingValue) >= 3; //If the new value has changed by 15 compared to the starting value
}

void alignToTape() {
	//TODO We need a second light sensor
}

void driveAlongTape() {
	while (true) {
		if (amIonTape()) {
			motor[motor1] = -30;
			motor[motor4] = -30;

			motor[motor2] = 30;
			motor[motor3] = 30;
	} else {
		motor[motor1] = 0;
		motor[motor2] = 0;
		motor[motor3] = 0;
		motor[motor4] = 0;

		wait1Msec(2000);
		alignToTape();
	}
}

bool amIonTape() {
	v = SensorValue[LIGHT];
	return abs(v - tapeValue) <= 4;
}

/*
MAIN
*/
task main()
{
	findTape(); //Look for the tape!
	alignToTape(); //Align to the found tape.
	driveAlongTape(); //Drive along the tape.
}
